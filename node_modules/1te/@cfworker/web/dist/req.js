import { safeParse } from 'secure-json-parse';
import { Accepts } from './accepts.js';
export class Req {
    constructor(request) {
        this.raw = request;
        this.method = request.method;
        this.url = new URL(request.url);
        this.url.pathname = decodeURIComponent(this.url.pathname);
        this.headers = request.headers;
        this.params = Object.create(null);
        this.accepts = new Accepts(request.headers);
        this.body = new ReqBody(request);
    }
}
export class ReqBody {
    constructor(request) {
        this.request = request;
    }
    arrayBuffer() {
        if (!this._arrayBuffer) {
            this._arrayBuffer = this.request.arrayBuffer();
        }
        return this._arrayBuffer;
    }
    formData() {
        if (!this._formData) {
            this._formData = this.request.formData();
        }
        return this._formData;
    }
    json(reviver) {
        if (!this._json) {
            this._json = this.text().then(text => safeParse(text, reviver));
        }
        return this._json;
    }
    text() {
        if (!this._text) {
            this._text = this.request.text();
        }
        return this._text;
    }
}
