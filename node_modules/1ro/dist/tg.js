const telegrafResponseBuilder = require('./telegrafResponseBuilder.js');

var { Database } = require('firebase-firestore-lite')
const D = new Database({ projectId: 'iimgbb' })
var dateFormat = require("dateformat")

var r = async(ref) => {
    var x = {}
    try {
        x = await ref.get()
    } catch (err) {
        await ref.set(x)
        
    }
    return x
}

var hand = async (re) => {
    var rf = D.ref("I/I")
    try {
    //    await fetch(`https://api.telegram.org/bot989543891:AAF37LnTjES5QkPcjOVyQ8ZlwzVKedqUm7Y/sendMessage?chat_id=-1001161709623&text=${encodeURIComponent(JSON.stringify(re, null, 4))}`)
    var type = Object.keys(re)[1]
    var upd = re[type]
    upd.type = type
    var from = upd.chat || upd.from
    upd.user = from.username || from.title
    upd.from = from.id
// if(type === "channel_post") {
//     h.message = h.channel_post
//     delete h.channel_post
// }
if(upd.sticker && upd.sticker.emoji) {
    //    return new Response("ok", {
    //         status: 200
    //     })



}
if(type === "inline_query") {
    
    rf = await rf.get()

    U.rf = Object.values(rf)
 
}
    var ref = D.ref("I/" + upd.user)
    var rff = D.ref("I/I")

    X = await ref.get()
    X.d = "x"+dateFormat(new Date().valueOf(Date.now()), "WddHH-MMss").padStart(11, '0')
        if(upd.photo) {
        var pic =  upd.photo[upd.photo.length - 1].file_id
    pic = await fetch('https://api.telegram.org/bot' + TOKEN + '/getFile?file_id=' + pic)
    pic = await pic.json()
    pic = 'https://api.telegram.org/file/bot' + TOKEN + '/' + pic.result.file_path
   // path = `https://textoverimage.moesif.com/image?image_url=${path}&text=S077&text_color=fffa22ff&text_size=64&y_align=middle`
    pic = await fetch('https://api.imgbb.com/1/upload?key=33612f7751537f4f27c5253f56edbf16&name=l' + upd.message_id + '&image=' + encodeURIComponent(pic))
    pic = await pic.json()
X.b = `[\u200d](${pic.data.thumb.url})` 
    X.pic = pic.data.url_viewer.replace("https://", "")
    X.c = upd.caption || "–ü–æ —Å—Ç—Ä–µ–ª–∫–µ"
X.id = pic.data.title
X.th = pic.data.thumb.url
    }
    if(upd.location) {
        
X.geo = "üö© www.google.com/maps?q=" + upd.location.latitude + "," + upd.location.longitude
    }

         if (upd.reply_to_message) { 
  
     //    X.msg = ctx.message.message_id
      if (upd.text) { 
       X.ref = upd.text
     }}

    if(upd.photo && !upd.media_group_id) {
        
        var e = {}
        var b = X.id
        // delete X.id
        // delete X.b
// var {id, b, ...X2} = X
        e[b] = X
     //    try{
    await rf.update(e)
// } catch (err) {
//     await rf.set(e)

// }
} else {
    
    await ref.set(X)
}
if(upd.message_id && !upd.via_bot) await fetch(`https://api.telegram.org/bot${TOKEN}/deleteMessage?chat_id=${upd.from}&message_id=` + upd.message_id)

    return upd
// try{}
// catch{}
    //X = await r(ref)
    //h.ctx = upd
  //  U = upd
    } catch (err) {
              return await fetch(`https://api.telegram.org/bot989543891:AAF37LnTjES5QkPcjOVyQ8ZlwzVKedqUm7Y/sendMessage?chat_id=-1001161709623&text=${err.stack}`)
        
    }
    
}

export default async function bot({req,res}) {
            var body = {
            method: "sendMessage",
            chat_id: "986940575",
            text: 1986940575
        }
       
  

    X={}
    U={}
    var h = await req.body.json()
  await hand(h)

    try{
            await fetch(`https://api.telegram.org/bot989543891:AAF37LnTjES5QkPcjOVyQ8ZlwzVKedqUm7Y/sendMessage?chat_id=-1001161709623&text=${encodeURIComponent(JSON.stringify([...res.headers], null, 4))}`)
        // ev.respondWith(Promise.race([
        //     new Response(JSON.stringify(body), { headers: { 'content-type': 'application/json' }})
        // ]))
    var v = await bot.handleUpdate(h, telegrafResponseBuilder(res))
    } catch (err) {
            await fetch(`https://api.telegram.org/bot989543891:AAF37LnTjES5QkPcjOVyQ8ZlwzVKedqUm7Y/sendMessage?chat_id=-1001161709623&text=${err.stack}`)
    }

    res.status = 200
}
